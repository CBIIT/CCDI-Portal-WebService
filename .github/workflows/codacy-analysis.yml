name: Codacy Security Scan

on:
  pull_request:
    branches: [ "dev**", "qa**", "main"]
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  Build:
    name: Maven Package Backend 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@main
      - name: Remove Example Properties File 
        run: rm $GITHUB_WORKSPACE/src/main/resources/application_local.properties 
      - name: Rename Properties File 
        run: mv $GITHUB_WORKSPACE/src/main/resources/application.properties.j2 $GITHUB_WORKSPACE/src/main/resources/application.properties
      - name: Setup Java JDK
        uses: actions/setup-java@v3.10.0
        with: 
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      - name: Build SprintBoot Application 
        run: mvn clean package -DskipTests=true 
      - name: Rename WAR Artifact 
        run: mv $GITHUB_WORKSPACE/target/Bento-0.0.1.war $GITHUB_WORKSPACE/target/ROOT.war 
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: build-artifact
          path: target/
  Codacy:
    name: SpotBugs SAST (via Codacy)
    needs: Build
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout Code
        uses: actions/checkout@main
      - name: Download Build Artifact
        uses: actions/download-artifact@v2.1.1 
        with:
          name: build-artifact
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master
        with:
          tool: spotbugs
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
          max-allowed-issues: 2147483647
          verbose: true
          allow-network: true 
          skip-uncommitted-files-check: true
          force-file-permissions: true
  SBOM:
    name: Generate SBOM (via CycloneDX)
    needs: Build
    runs-on: ubuntu-latest 
    steps:
      - name: Checkout Code
        uses: actions/checkout@main
      - name: Create Target Directory
        run: mkdir target sbom 
      - name: Download Build Artifact
        uses: actions/download-artifact@v2.1.1 
        with:
          name: build-artifact
          path: target
      - name: Generate SBOM
        uses: anchore/sbom-action@v0.13.3
        with:
          path: target
          upload-artifact: false 
          upload-release-asset: false 
          artifact-name: $GITHUB_REPOSITORY
          output-file: sbom
      - name: Verify SBOM Output 
        run: ls -la sbom


